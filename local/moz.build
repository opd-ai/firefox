# -*- Mode: python; indent-tabs-mode: nil; tab-width: 40 -*-
# vim: set filetype=python:
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# Local build system overlays
# This file contains build configuration for local Rust components

if CONFIG.get('MOZ_RUST_DAFSA'):
    # Generate Rust Dafsa header
    GeneratedFile(
        'rust_dafsa.h',
        script='scripts/generate-dafsa-header.py',
        inputs=[
            'rust/firefox_dafsa/cbindgen.toml',
        ],
    )
    
    EXPORTS += [
        '!rust_dafsa.h',
    ]
    
    # The actual Rust library will be linked via toolkit/library/rust
    # We just need to ensure the header is available

if CONFIG.get('MOZ_RUST_CHAOSMODE'):
    # Generate Rust ChaosMode header
    GeneratedFile(
        'rust_chaosmode.h',
        script='scripts/generate-chaosmode-header.py',
        inputs=[
            'rust/firefox_chaosmode/cbindgen.toml',
        ],
    )
    
    EXPORTS += [
        '!rust_chaosmode.h',
    ]
    
    # The actual Rust library will be linked via toolkit/library/rust
    # We just need to ensure the header is available

if CONFIG.get('MOZ_RUST_XORSHIFT128PLUS'):
    # Generate Rust XorShift128+ header
    GeneratedFile(
        'rust_xorshift128plus.h',
        script='scripts/generate-xorshift128plus-header.py',
        inputs=[
            'rust/firefox_xorshift128plus/cbindgen.toml',
        ],
    )
    
    EXPORTS += [
        '!rust_xorshift128plus.h',
    ]
    
    # The actual Rust library will be linked via toolkit/library/rust
    # We just need to ensure the header is available

if CONFIG.get('MOZ_RUST_HASHBYTES'):
    # Generate Rust HashBytes header
    GeneratedFile(
        'rust_hashbytes.h',
        script='scripts/generate-hashbytes-header.py',
        inputs=[
            'rust/firefox_hashbytes/cbindgen.toml',
        ],
    )
    
    EXPORTS += [
        '!rust_hashbytes.h',
    ]
    
    # The actual Rust library will be linked via toolkit/library/rust
    # We just need to ensure the header is available

if CONFIG.get('MOZ_RUST_FLOATINGPOINT'):
    # Generate Rust FloatingPoint header
    GeneratedFile(
        'rust_floatingpoint.h',
        script='scripts/generate-floatingpoint-header.py',
        inputs=[
            'rust/firefox_floatingpoint/cbindgen.toml',
        ],
    )
    
    EXPORTS += [
        '!rust_floatingpoint.h',
    ]
    
    # The actual Rust library will be linked via toolkit/library/rust
    # We just need to ensure the header is available

if CONFIG.get('MOZ_RUST_UTF8_VALIDATOR'):
    # Generate Rust UTF-8 Validator header
    GeneratedFile(
        'rust_utf8_validator.h',
        script='scripts/generate-utf8-validator-header.py',
        inputs=[
            'rust/firefox_utf8_validator/cbindgen.toml',
        ],
    )
    
    EXPORTS += [
        '!rust_utf8_validator.h',
    ]
    
    # The actual Rust library will be linked via toolkit/library/rust
    # We just need to ensure the header is available

if CONFIG.get('MOZ_RUST_JSONWRITER'):
    # Generate Rust JSONWriter header
    GeneratedFile(
        'rust_jsonwriter.h',
        script='scripts/generate-jsonwriter-header.py',
        inputs=[
            'rust/firefox_jsonwriter/cbindgen.toml',
        ],
    )
    
    EXPORTS += [
        '!rust_jsonwriter.h',
    ]
    
    # The actual Rust library will be linked via toolkit/library/rust
    # We just need to ensure the header is available

